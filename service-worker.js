"use strict";var precacheConfig=[["/star-wars-matcher/index.html","6d4c58f62e770395c3457943d70c121e"],["/star-wars-matcher/static/css/main.8dd3dc0a.css","32995a97de81be5e8415113b80d8d0f3"],["/star-wars-matcher/static/js/main.ce90f523.js","75303b471c48a885d16e8b5b3f0889c4"],["/star-wars-matcher/static/media/BeruWhitesunlars.9c0d345f.jpg","9c0d345f00e36939a3b001697b6dc21c"],["/star-wars-matcher/static/media/BiggsDarklighter.032ae5b8.jpg","032ae5b815c6145705cb94d903d8845f"],["/star-wars-matcher/static/media/C-3PO.cfecaf21.jpg","cfecaf2164cb58877a491fe07877e399"],["/star-wars-matcher/static/media/DarthVader.b339f8e7.jpg","b339f8e76565199d60df4600ffa70952"],["/star-wars-matcher/static/media/LeiaOrgana.cd775141.jpg","cd775141a94024c5575c13b6e0228ec9"],["/star-wars-matcher/static/media/LukeSkywalker.8f33a0cb.jpg","8f33a0cba074c566ccc22f352a91d7d8"],["/star-wars-matcher/static/media/Obi-WanKenobi.a1ebf32e.jpg","a1ebf32ecf306fcd28e6304833408345"],["/star-wars-matcher/static/media/OwenLars.ddae3d31.jpg","ddae3d3151812586f74265e1a8d400ef"],["/star-wars-matcher/static/media/R2-D2.973446a4.jpg","973446a47669a7fd3bb9b05aea594a57"],["/star-wars-matcher/static/media/R5-D4.1c9a82d5.jpg","1c9a82d5fabbf65ab554c590fa9d9374"],["/star-wars-matcher/static/media/logo.16462127.jpg","1646212701558d7fd11f2eadba2689d4"],["/star-wars-matcher/static/media/poster.c251ce4c.jpg","c251ce4cba358e6e3d17b0d978527a50"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),n=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,r),t=urlsToCacheKeys.has(a));var n="/star-wars-matcher/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});